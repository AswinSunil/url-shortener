name: Build, Push Docker Image and Deploy 
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up kind cluster
        uses: engineerd/setup-kind@v0.6.2

      - name: Delete existing kind cluster (if any)
        run: kind delete cluster --name kind || true

      - name: Create kind cluster
        run: kind create cluster --name kind --wait 5m

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "aswinsunil" --password-stdin

      - name: Build Docker Image locally
        run: docker build -t ghcr.io/aswinsunil/url-shortener:latest .

      - name: Load Docker Image into kind cluster
        run: kind load docker-image ghcr.io/aswinsunil/url-shortener:latest

      - name: Push Docker Image to GHCR
        run: docker push ghcr.io/aswinsunil/url-shortener:latest

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl rollout restart deployment/url-shortener

      - name: Wait for Pod to be Ready
        run: kubectl wait --for=condition=ready pod -l app=url-shortener --timeout=90s

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Port-forward and test the URL shortener API
        run: |
          kubectl port-forward deployment/url-shortener 3000:3000 &
          sleep 10  # Give port-forward some time

          echo "Testing whether long URL converts into Short URL "
          curl -s -X POST http://localhost:3000/shorten \
            -H "Content-Type: application/json" \
            -d '{"url": "https://thisisthelongurl.com"}' > response.json

          cat response.json
          SHORT_URL=$(jq -r '.short_url' response.json)

          echo "Testing GET to short URL: $SHORT_URL"
          curl -v "$SHORT_URL"
